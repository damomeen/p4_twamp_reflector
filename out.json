{
  "program" : "p4src/main.p4",
  "__meta__" : {
    "version" : [2, 7],
    "compiler" : "https://github.com/p4lang/p4c"
  },
  "header_types" : [
    {
      "name" : "scalars_0",
      "id" : 0,
      "fields" : [
        ["tmp_0", 64, false],
        ["tmp", 64, false],
        ["TwampReflector_dst_0", 48, false],
        ["TwampReflector_dstIP_0", 32, false],
        ["Loopback_hash_index_1", 32, false],
        ["Loopback_hash_index_2", 32, false],
        ["TwampReflector_hasReturned_0", 1, false],
        ["_padding_0", 7, false]
      ]
    },
    {
      "name" : "ethernet_t",
      "id" : 1,
      "fields" : [
        ["dstAddr", 48, false],
        ["srcAddr", 48, false],
        ["etherType", 16, false]
      ]
    },
    {
      "name" : "arp_t",
      "id" : 2,
      "fields" : [
        ["htype", 16, false],
        ["ptype", 16, false],
        ["hlen", 8, false],
        ["plen", 8, false],
        ["opcode", 16, false],
        ["srcMAC", 48, false],
        ["srcIP", 32, false],
        ["dstMAC", 48, false],
        ["dstIP", 32, false]
      ]
    },
    {
      "name" : "ipv4_t",
      "id" : 3,
      "fields" : [
        ["version", 4, false],
        ["ihl", 4, false],
        ["dscp", 6, false],
        ["ecn", 2, false],
        ["totalLen", 16, false],
        ["id", 16, false],
        ["flags", 3, false],
        ["fragOffset", 13, false],
        ["ttl", 8, false],
        ["protocol", 8, false],
        ["hdrChecksum", 16, false],
        ["srcAddr", 32, false],
        ["dstAddr", 32, false]
      ]
    },
    {
      "name" : "tcp_t",
      "id" : 4,
      "fields" : [
        ["srcPort", 16, false],
        ["dstPort", 16, false],
        ["seqNum", 32, false],
        ["ackNum", 32, false],
        ["dataOffset", 4, false],
        ["reserved", 3, false],
        ["flags", 9, false],
        ["winSize", 16, false],
        ["csum", 16, false],
        ["urgPoint", 16, false]
      ]
    },
    {
      "name" : "udp_t",
      "id" : 5,
      "fields" : [
        ["srcPort", 16, false],
        ["dstPort", 16, false],
        ["len", 16, false],
        ["csum", 16, false]
      ]
    },
    {
      "name" : "twamp_test_t",
      "id" : 6,
      "fields" : [
        ["sequenceNumber", 32, false],
        ["timestamp", 64, false],
        ["errorEstimate", 16, false],
        ["mbz0", 16, false],
        ["receiveTimestamp", 64, false],
        ["senderSequenceNumber", 32, false],
        ["senderTimestamp", 64, false],
        ["senderErrorEstimate", 16, false],
        ["mbz1", 16, false],
        ["senderTTL", 8, false]
      ]
    },
    {
      "name" : "cpu_header_t",
      "id" : 7,
      "fields" : [
        ["preamble", 64, false],
        ["device", 8, false],
        ["reason", 8, false],
        ["port", 8, false]
      ]
    },
    {
      "name" : "twamp_metadata_t",
      "id" : 8,
      "fields" : [
        ["senderAddr", 32, false],
        ["senderPort", 16, false],
        ["receiverAddr", 32, false],
        ["receiverPort", 16, false],
        ["dscp", 32, false]
      ]
    },
    {
      "name" : "standard_metadata",
      "id" : 9,
      "fields" : [
        ["ingress_port", 9, false],
        ["egress_spec", 9, false],
        ["egress_port", 9, false],
        ["clone_spec", 32, false],
        ["instance_type", 32, false],
        ["drop", 1, false],
        ["recirculate_port", 16, false],
        ["packet_length", 32, false],
        ["enq_timestamp", 32, false],
        ["enq_qdepth", 19, false],
        ["deq_timedelta", 32, false],
        ["deq_qdepth", 19, false],
        ["ingress_global_timestamp", 48, false],
        ["egress_global_timestamp", 48, false],
        ["lf_field_list", 32, false],
        ["mcast_grp", 16, false],
        ["resubmit_flag", 32, false],
        ["egress_rid", 16, false],
        ["checksum_error", 1, false],
        ["recirculate_flag", 32, false],
        ["_padding", 5, false]
      ]
    }
  ],
  "headers" : [
    {
      "name" : "scalars",
      "id" : 0,
      "header_type" : "scalars_0",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "header_type" : "standard_metadata",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "ethernet",
      "id" : 2,
      "header_type" : "ethernet_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "arp",
      "id" : 3,
      "header_type" : "arp_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "ipv4",
      "id" : 4,
      "header_type" : "ipv4_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "tcp",
      "id" : 5,
      "header_type" : "tcp_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "udp",
      "id" : 6,
      "header_type" : "udp_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "twamp_test",
      "id" : 7,
      "header_type" : "twamp_test_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "cpu_header",
      "id" : 8,
      "header_type" : "cpu_header_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "userMetadata.twamp_metadata",
      "id" : 9,
      "header_type" : "twamp_metadata_t",
      "metadata" : false,
      "pi_omit" : true
    }
  ],
  "header_stacks" : [],
  "header_union_types" : [],
  "header_unions" : [],
  "header_union_stacks" : [],
  "field_lists" : [],
  "errors" : [
    ["NoError", 1],
    ["PacketTooShort", 2],
    ["NoMatch", 3],
    ["StackOutOfBounds", 4],
    ["HeaderTooShort", 5],
    ["ParserTimeout", 6],
    ["ParserInvalidArgument", 7]
  ],
  "enums" : [],
  "parsers" : [
    {
      "name" : "parser",
      "id" : 0,
      "init_state" : "start",
      "parse_states" : [
        {
          "name" : "parse_twamp_test",
          "id" : 0,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "twamp_test"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_tcp",
          "id" : 1,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "tcp"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_udp",
          "id" : 2,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "udp"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x230f",
              "mask" : null,
              "next_state" : "parse_twamp_test"
            },
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["udp", "dstPort"]
            }
          ]
        },
        {
          "name" : "parse_ipv4",
          "id" : 3,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ipv4"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x11",
              "mask" : null,
              "next_state" : "parse_udp"
            },
            {
              "type" : "hexstr",
              "value" : "0x06",
              "mask" : null,
              "next_state" : "parse_tcp"
            },
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ]
        },
        {
          "name" : "parse_arp",
          "id" : 4,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "arp"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_ethernet",
          "id" : 5,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ethernet"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x0800",
              "mask" : null,
              "next_state" : "parse_ipv4"
            },
            {
              "type" : "hexstr",
              "value" : "0x0806",
              "mask" : null,
              "next_state" : "parse_arp"
            },
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            }
          ]
        },
        {
          "name" : "parse_cpu_header",
          "id" : 6,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "cpu_header"
                }
              ],
              "op" : "extract"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["standard_metadata", "egress_spec"]
                },
                {
                  "type" : "expression",
                  "value" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "field",
                        "value" : ["cpu_header", "port"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x01ff"
                      }
                    }
                  }
                }
              ],
              "op" : "set"
            }
          ],
          "transitions" : [
            {
              "value" : "default",
              "mask" : null,
              "next_state" : "parse_ethernet"
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "start",
          "id" : 7,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "tmp_0"]
                },
                {
                  "type" : "lookahead",
                  "value" : [0, 64]
                }
              ],
              "op" : "set"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "tmp"]
                },
                {
                  "type" : "expression",
                  "value" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "tmp_0"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffffffffffff"
                      }
                    }
                  }
                }
              ],
              "op" : "set"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x0000000000000000",
              "mask" : null,
              "next_state" : "parse_cpu_header"
            },
            {
              "value" : "default",
              "mask" : null,
              "next_state" : "parse_ethernet"
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp"]
            }
          ]
        }
      ]
    }
  ],
  "parse_vsets" : [],
  "deparsers" : [
    {
      "name" : "deparser",
      "id" : 0,
      "source_info" : {
        "filename" : "p4src/include/parser.p4",
        "line" : 73,
        "column" : 8,
        "source_fragment" : "DeparserImpl"
      },
      "order" : ["ethernet", "ipv4", "udp", "twamp_test"]
    }
  ],
  "meter_arrays" : [],
  "counter_arrays" : [],
  "register_arrays" : [
    {
      "name" : "mac_to_port_hash",
      "id" : 0,
      "source_info" : {
        "filename" : "p4src/include/loopback_traffic.p4",
        "line" : 20,
        "column" : 41,
        "source_fragment" : "mac_to_port_hash"
      },
      "size" : 1024,
      "bitwidth" : 9
    }
  ],
  "calculations" : [
    {
      "name" : "calc",
      "id" : 0,
      "algo" : "crc32",
      "input" : [
        {
          "type" : "field",
          "value" : ["ethernet", "srcAddr"]
        }
      ]
    },
    {
      "name" : "calc_0",
      "id" : 1,
      "algo" : "crc32",
      "input" : [
        {
          "type" : "field",
          "value" : ["ethernet", "dstAddr"]
        }
      ]
    }
  ],
  "learn_lists" : [],
  "actions" : [
    {
      "name" : "NoAction",
      "id" : 0,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 1,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 2,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 3,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "ingress.TwampReflector.configure_reflector",
      "id" : 4,
      "runtime_data" : [
        {
          "name" : "senderAddr",
          "bitwidth" : 32
        },
        {
          "name" : "senderPort",
          "bitwidth" : 16
        },
        {
          "name" : "receiverAddr",
          "bitwidth" : 32
        },
        {
          "name" : "receiverPort",
          "bitwidth" : 16
        },
        {
          "name" : "dscp",
          "bitwidth" : 32
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["userMetadata.twamp_metadata", "senderAddr"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "p4src/include/twamp_reflector.p4",
            "line" : 21,
            "column" : 8,
            "source_fragment" : "meta.twamp_metadata.senderAddr = senderAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["userMetadata.twamp_metadata", "senderPort"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "p4src/include/twamp_reflector.p4",
            "line" : 22,
            "column" : 8,
            "source_fragment" : "meta.twamp_metadata.senderPort = senderPort"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["userMetadata.twamp_metadata", "receiverAddr"]
            },
            {
              "type" : "runtime_data",
              "value" : 2
            }
          ],
          "source_info" : {
            "filename" : "p4src/include/twamp_reflector.p4",
            "line" : 23,
            "column" : 8,
            "source_fragment" : "meta.twamp_metadata.receiverAddr = receiverAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["userMetadata.twamp_metadata", "receiverPort"]
            },
            {
              "type" : "runtime_data",
              "value" : 3
            }
          ],
          "source_info" : {
            "filename" : "p4src/include/twamp_reflector.p4",
            "line" : 24,
            "column" : 8,
            "source_fragment" : "meta.twamp_metadata.receiverPort = receiverPort"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["userMetadata.twamp_metadata", "dscp"]
            },
            {
              "type" : "runtime_data",
              "value" : 4
            }
          ],
          "source_info" : {
            "filename" : "p4src/include/twamp_reflector.p4",
            "line" : 25,
            "column" : 8,
            "source_fragment" : "meta.twamp_metadata.dscp = dscp"
          }
        }
      ]
    },
    {
      "name" : "ingress.TwampReflector.twamp_reflect",
      "id" : 5,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/include/twamp_reflector.p4",
            "line" : 43,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "TwampReflector_dst_0"]
            },
            {
              "type" : "field",
              "value" : ["ethernet", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/include/twamp_reflector.p4",
            "line" : 44,
            "column" : 8,
            "source_fragment" : "bit<48> dst = hdr.ethernet.dstAddr;"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "dstAddr"]
            },
            {
              "type" : "field",
              "value" : ["ethernet", "srcAddr"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/include/twamp_reflector.p4",
            "line" : 45,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.dstAddr = hdr.ethernet.srcAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "srcAddr"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "TwampReflector_dst_0"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/include/twamp_reflector.p4",
            "line" : 46,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.srcAddr = dst"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "TwampReflector_dstIP_0"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/include/twamp_reflector.p4",
            "line" : 48,
            "column" : 8,
            "source_fragment" : "bit<32> dstIP = hdr.ipv4.dstAddr;"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "dstAddr"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "srcAddr"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/include/twamp_reflector.p4",
            "line" : 49,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.dstAddr = hdr.ipv4.srcAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "srcAddr"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "TwampReflector_dstIP_0"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/include/twamp_reflector.p4",
            "line" : 50,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.srcAddr = dstIP"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["twamp_test", "senderSequenceNumber"]
            },
            {
              "type" : "field",
              "value" : ["twamp_test", "sequenceNumber"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/include/twamp_reflector.p4",
            "line" : 52,
            "column" : 8,
            "source_fragment" : "hdr.twamp_test.senderSequenceNumber = hdr.twamp_test.sequenceNumber"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["twamp_test", "senderTimestamp"]
            },
            {
              "type" : "field",
              "value" : ["twamp_test", "timestamp"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/include/twamp_reflector.p4",
            "line" : 53,
            "column" : 8,
            "source_fragment" : "hdr.twamp_test.senderTimestamp = hdr.twamp_test.timestamp"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["twamp_test", "senderErrorEstimate"]
            },
            {
              "type" : "field",
              "value" : ["twamp_test", "errorEstimate"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/include/twamp_reflector.p4",
            "line" : 54,
            "column" : 8,
            "source_fragment" : "hdr.twamp_test.senderErrorEstimate = hdr.twamp_test.errorEstimate"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["twamp_test", "senderTTL"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "ttl"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/include/twamp_reflector.p4",
            "line" : 55,
            "column" : 8,
            "source_fragment" : "hdr.twamp_test.senderTTL = hdr.ipv4.ttl"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["twamp_test", "receiveTimestamp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<<",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : ">>",
                                              "left" : {
                                                "type" : "field",
                                                "value" : ["standard_metadata", "ingress_global_timestamp"]
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xa"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffffffffffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffffffff"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffffffffffff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x20"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["standard_metadata", "ingress_global_timestamp"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x000000000400"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffff"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffff"
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["twamp_test", "timestamp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<<",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : ">>",
                                              "left" : {
                                                "type" : "field",
                                                "value" : ["standard_metadata", "egress_global_timestamp"]
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xa"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffffffffffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffffffff"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffffffffffff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x20"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["standard_metadata", "egress_global_timestamp"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x000000000400"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffff"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffff"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name" : "ingress.Loopback.send_frame_to_cpu",
      "id" : 6,
      "runtime_data" : [
        {
          "name" : "port",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "p4src/include/loopback_traffic.p4",
            "line" : 38,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = port"
          }
        },
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "Loopback_hash_index_1"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            },
            {
              "type" : "calculation",
              "value" : "calc"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000400"
            }
          ],
          "source_info" : {
            "filename" : "p4src/include/loopback_traffic.p4",
            "line" : 42,
            "column" : 8,
            "source_fragment" : "hash(hash_index, HashAlgorithm.crc32, 32w0, {hdr.ethernet.srcAddr}, MAC_TO_PORT_HASH_SIZE)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "mac_to_port_hash"
            },
            {
              "type" : "field",
              "value" : ["scalars", "Loopback_hash_index_1"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/include/loopback_traffic.p4",
            "line" : 43,
            "column" : 8,
            "source_fragment" : "mac_to_port_hash.write(hash_index, standard_metadata.ingress_port)"
          }
        }
      ]
    },
    {
      "name" : "ingress.Loopback.send_frame_from_cpu",
      "id" : 7,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "Loopback_hash_index_2"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            },
            {
              "type" : "calculation",
              "value" : "calc_0"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000400"
            }
          ],
          "source_info" : {
            "filename" : "p4src/include/loopback_traffic.p4",
            "line" : 68,
            "column" : 8,
            "source_fragment" : "hash(hash_index, HashAlgorithm.crc32, 32w0, {hdr.ethernet.dstAddr}, MAC_TO_PORT_HASH_SIZE)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "register_array",
              "value" : "mac_to_port_hash"
            },
            {
              "type" : "field",
              "value" : ["scalars", "Loopback_hash_index_2"]
            }
          ],
          "source_info" : {
            "filename" : "p4src/include/loopback_traffic.p4",
            "line" : 69,
            "column" : 8,
            "source_fragment" : "mac_to_port_hash.read(standard_metadata.egress_spec, hash_index)"
          }
        }
      ]
    },
    {
      "name" : "ingress.Forward.send_to_cpu",
      "id" : 8,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_port"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0080"
            }
          ],
          "source_info" : {
            "filename" : "p4src/include/forward.p4",
            "line" : 20,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_port = 9w128"
          }
        }
      ]
    },
    {
      "name" : "ingress.Forward.send_to_eth",
      "id" : 9,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_port"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "p4src/include/forward.p4",
            "line" : 23,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_port = 9w0"
          }
        }
      ]
    },
    {
      "name" : "ingress.Forward.send_to_port",
      "id" : 10,
      "runtime_data" : [
        {
          "name" : "port",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_port"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "p4src/include/forward.p4",
            "line" : 26,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_port = port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "p4src/include/forward.p4",
            "line" : 27,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = port"
          }
        }
      ]
    },
    {
      "name" : "act",
      "id" : 11,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "TwampReflector_hasReturned_0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "b2d",
                  "left" : null,
                  "right" : {
                    "type" : "bool",
                    "value" : true
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "p4src/include/twamp_reflector.p4",
            "line" : 65,
            "column" : 12,
            "source_fragment" : "return"
          }
        }
      ]
    },
    {
      "name" : "act_0",
      "id" : 12,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "TwampReflector_hasReturned_0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "b2d",
                  "left" : null,
                  "right" : {
                    "type" : "bool",
                    "value" : false
                  }
                }
              }
            }
          ]
        }
      ]
    }
  ],
  "pipelines" : [
    {
      "name" : "ingress",
      "id" : 0,
      "source_info" : {
        "filename" : "p4src/main.p4",
        "line" : 28,
        "column" : 8,
        "source_fragment" : "ingress"
      },
      "init_table" : "node_2",
      "tables" : [
        {
          "name" : "tbl_act",
          "id" : 0,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [12],
          "actions" : ["act_0"],
          "base_default_next" : "node_4",
          "next_tables" : {
            "act_0" : "node_4"
          },
          "default_entry" : {
            "action_id" : 12,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_act_0",
          "id" : 1,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [11],
          "actions" : ["act"],
          "base_default_next" : "node_6",
          "next_tables" : {
            "act" : "node_6"
          },
          "default_entry" : {
            "action_id" : 11,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "ingress.TwampReflector.tb_configure_reflector",
          "id" : 2,
          "source_info" : {
            "filename" : "p4src/include/twamp_reflector.p4",
            "line" : 27,
            "column" : 10,
            "source_fragment" : "tb_configure_reflector"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [4, 0],
          "actions" : ["ingress.TwampReflector.configure_reflector", "NoAction"],
          "base_default_next" : "tbl_TwampReflector_twamp_reflect",
          "next_tables" : {
            "ingress.TwampReflector.configure_reflector" : "tbl_TwampReflector_twamp_reflect",
            "NoAction" : "tbl_TwampReflector_twamp_reflect"
          },
          "default_entry" : {
            "action_id" : 0,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_TwampReflector_twamp_reflect",
          "id" : 3,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [5],
          "actions" : ["ingress.TwampReflector.twamp_reflect"],
          "base_default_next" : "ingress.Loopback.tb_configure_loopback_out",
          "next_tables" : {
            "ingress.TwampReflector.twamp_reflect" : "ingress.Loopback.tb_configure_loopback_out"
          },
          "default_entry" : {
            "action_id" : 5,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "ingress.Loopback.tb_configure_loopback_out",
          "id" : 4,
          "source_info" : {
            "filename" : "p4src/include/loopback_traffic.p4",
            "line" : 72,
            "column" : 10,
            "source_fragment" : "tb_configure_loopback_out"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "standard_metadata.ingress_port",
              "target" : ["standard_metadata", "ingress_port"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [7, 2],
          "actions" : ["ingress.Loopback.send_frame_from_cpu", "NoAction"],
          "base_default_next" : "node_10",
          "next_tables" : {
            "ingress.Loopback.send_frame_from_cpu" : "node_10",
            "NoAction" : "node_10"
          },
          "default_entry" : {
            "action_id" : 2,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          },
          "entries" : [
            {
              "match_key" : [
                {
                  "match_type" : "exact",
                  "key" : "0x00ff"
                }
              ],
              "action_entry" : {
                "action_id" : 7,
                "action_data" : []
              },
              "priority" : 1
            }
          ]
        },
        {
          "name" : "ingress.Loopback.tb_configure_loopback_in",
          "id" : 5,
          "source_info" : {
            "filename" : "p4src/include/loopback_traffic.p4",
            "line" : 46,
            "column" : 10,
            "source_fragment" : "tb_configure_loopback_in"
          },
          "key" : [
            {
              "match_type" : "ternary",
              "name" : "hdr.ethernet.dstAddr",
              "target" : ["ethernet", "dstAddr"],
              "mask" : null
            }
          ],
          "match_type" : "ternary",
          "type" : "simple",
          "max_size" : 16,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [6, 1],
          "actions" : ["ingress.Loopback.send_frame_to_cpu", "NoAction"],
          "base_default_next" : "ingress.Forward.tb_forward",
          "next_tables" : {
            "ingress.Loopback.send_frame_to_cpu" : "ingress.Forward.tb_forward",
            "NoAction" : "ingress.Forward.tb_forward"
          },
          "default_entry" : {
            "action_id" : 1,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          },
          "entries" : [
            {
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0x112233445566",
                  "mask" : "0xffffffffffff"
                }
              ],
              "action_entry" : {
                "action_id" : 6,
                "action_data" : ["0xff"]
              },
              "priority" : 1
            },
            {
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0xffffffffffff",
                  "mask" : "0xffffffffffff"
                }
              ],
              "action_entry" : {
                "action_id" : 6,
                "action_data" : ["0xff"]
              },
              "priority" : 2
            }
          ]
        },
        {
          "name" : "ingress.Forward.tb_forward",
          "id" : 6,
          "source_info" : {
            "filename" : "p4src/include/forward.p4",
            "line" : 30,
            "column" : 10,
            "source_fragment" : "tb_forward"
          },
          "key" : [
            {
              "match_type" : "ternary",
              "name" : "hdr.ethernet.dstAddr",
              "target" : ["ethernet", "dstAddr"],
              "mask" : null
            }
          ],
          "match_type" : "ternary",
          "type" : "simple",
          "max_size" : 31,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [8, 9, 10, 3],
          "actions" : ["ingress.Forward.send_to_cpu", "ingress.Forward.send_to_eth", "ingress.Forward.send_to_port", "NoAction"],
          "base_default_next" : null,
          "next_tables" : {
            "ingress.Forward.send_to_cpu" : null,
            "ingress.Forward.send_to_eth" : null,
            "ingress.Forward.send_to_port" : null,
            "NoAction" : null
          },
          "default_entry" : {
            "action_id" : 3,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_2",
          "id" : 0,
          "source_info" : {
            "filename" : "p4src/main.p4",
            "line" : 32,
            "column" : 6,
            "source_fragment" : "!hdr.udp.isValid() && !hdr.tcp.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "not",
                  "left" : null,
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["udp", "$valid$"]
                      }
                    }
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "not",
                  "left" : null,
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["tcp", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          },
          "true_next" : null,
          "false_next" : "tbl_act"
        },
        {
          "name" : "node_4",
          "id" : 1,
          "source_info" : {
            "filename" : "p4src/include/twamp_reflector.p4",
            "line" : 64,
            "column" : 12,
            "source_fragment" : "!hdr.twamp_test.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "not",
              "left" : null,
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["twamp_test", "$valid$"]
                  }
                }
              }
            }
          },
          "true_next" : "tbl_act_0",
          "false_next" : "node_6"
        },
        {
          "name" : "node_6",
          "id" : 2,
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "not",
              "left" : null,
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "TwampReflector_hasReturned_0"]
                  }
                }
              }
            }
          },
          "true_next" : "ingress.TwampReflector.tb_configure_reflector",
          "false_next" : "ingress.Loopback.tb_configure_loopback_out"
        },
        {
          "name" : "node_10",
          "id" : 3,
          "source_info" : {
            "filename" : "p4src/include/loopback_traffic.p4",
            "line" : 131,
            "column" : 12,
            "source_fragment" : "hdr.ipv4.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["ipv4", "$valid$"]
              }
            }
          },
          "true_next" : "ingress.Loopback.tb_configure_loopback_in",
          "false_next" : "ingress.Forward.tb_forward"
        }
      ]
    },
    {
      "name" : "egress",
      "id" : 1,
      "source_info" : {
        "filename" : "p4src/include/parser.p4",
        "line" : 68,
        "column" : 8,
        "source_fragment" : "egress"
      },
      "init_table" : null,
      "tables" : [],
      "action_profiles" : [],
      "conditionals" : []
    }
  ],
  "checksums" : [],
  "force_arith" : [],
  "extern_instances" : [],
  "field_aliases" : [
    [
      "queueing_metadata.enq_timestamp",
      ["standard_metadata", "enq_timestamp"]
    ],
    [
      "queueing_metadata.enq_qdepth",
      ["standard_metadata", "enq_qdepth"]
    ],
    [
      "queueing_metadata.deq_timedelta",
      ["standard_metadata", "deq_timedelta"]
    ],
    [
      "queueing_metadata.deq_qdepth",
      ["standard_metadata", "deq_qdepth"]
    ],
    [
      "intrinsic_metadata.ingress_global_timestamp",
      ["standard_metadata", "ingress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.egress_global_timestamp",
      ["standard_metadata", "egress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.lf_field_list",
      ["standard_metadata", "lf_field_list"]
    ],
    [
      "intrinsic_metadata.mcast_grp",
      ["standard_metadata", "mcast_grp"]
    ],
    [
      "intrinsic_metadata.resubmit_flag",
      ["standard_metadata", "resubmit_flag"]
    ],
    [
      "intrinsic_metadata.egress_rid",
      ["standard_metadata", "egress_rid"]
    ],
    [
      "intrinsic_metadata.recirculate_flag",
      ["standard_metadata", "recirculate_flag"]
    ]
  ]
}